import AILib.AI;
import AILib.AILib.AIFunctions;
import AILib.AILib.FileHandler;

import java.util.Arrays;

public class App {
    public static void main(String[] args) {
        double[][][] example = {
        {{1,1,1,
          0,0,0,
          0,0,0},{0.8f,0.2f}},
        {{0,0,0,
          1,1,1,
          0,0,0},{0.8f,0.2f}},
        {{0,0,0,
          0,0,0,
          1,1,1},{0.8f,0.2f}},
        {{1,0,0,
          1,0,0,
          1,0,0},{0.2f,0.8f}},
        {{0,1,0,
          0,1,0,
          0,1,0},{0.2f,0.8f}},
        {{0,0,1,
          0,0,1,
          0,0,1},{0.2f,0.8f}},
        {{1,1,1,
          1,0,0,
          1,0,0},{0.8f,0.8f}},
        {{1,1,1,
          0,1,0,
          0,1,0},{0.8f,0.8f}},
        {{1,1,1,
          0,0,1,
          0,0,1},{0.8f,0.8f}},
        {{1,0,0,
          1,1,1,
          1,0,0},{0.8f,0.8f}},
        {{0,1,0,
          1,1,1,
          0,1,0},{0.8f,0.8f}},
        {{0,0,1,
          1,1,1,
          0,0,1},{0.8f,0.8f}},
        {{1,0,0,
          1,0,0,
          1,1,1},{0.8f,0.8f}},
        {{0,1,0,
          0,1,0,
          1,1,1},{0.8f,0.8f}},
        {{0,0,1,
          0,0,1,
          1,1,1},{0.8f,0.8f}},
        {{0,0,0,
          0,0,0,
          0,0,0},{0.2f,0.2f}}};

        /*float[][][] example = {{{0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0}, {0.8f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f}},
                 {{0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, {0.2f, 0.8f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f}},
                 {{0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0}, {0.2f, 0.2f, 0.8f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f}},
                 {{0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0}, {0.2f, 0.2f, 0.2f, 0.8f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f}},
                 {{0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0.2f, 0.2f, 0.2f, 0.2f, 0.8f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f}},
                 {{0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0}, {0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.8f, 0.2f, 0.2f, 0.2f, 0.2f}},
                 {{0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.8f, 0.2f, 0.2f, 0.2f}},
                 {{0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0}, {0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.8f, 0.2f, 0.2f}},
                 {{0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.8f, 0.2f}},
                 {{0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.8f}},
                 {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f}},
                 {{0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f, 0.2f}}};
        */
        AI a = new AI(9, AIFunctions.SIGMOID);
        a.addLayer(4);
        a.addLayer(3);
        a.addLayer(2);

        a.learning(example,1);
        a.AIChecker(example);
        a.saveAI("ebanina.bin");

        AI b = new AI("ebanina.bin");
        b.AIChecker(example);
    }
}